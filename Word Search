Using only dfs will give the best answer and best efficiency 

class Solution {
    
    public static boolean dfs(int i, int j, char mat[][],String word,int index){
        if(i<0 || i>=mat.length || j<0 || j>=mat[0].length || mat[i][j]!=word.charAt(index)){
            return false;
        }
        if(index==word.length()-1){
            return true;
        }
        
        char temp=mat[i][j];
        mat[i][j]='#';
        boolean found= dfs(i+1,j,mat,word,index+1) || dfs(i,j+1,mat,word,index+1) 
        || dfs(i-1,j,mat,word,index+1) || dfs(i,j-1,mat,word,index+1); 
        
        
        mat[i][j]=temp;
        return found;
    }
    static public boolean isWordExist(char[][] mat, String word) {
        // Code here
        int m=mat.length;
        int n=mat[0].length;
        int index=0;
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(dfs(i,j,mat,word,index)){
                    return true;
                }
            }
        }
        return false;
        
    }
}
